{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/board/board.component.html","./src/app/move-list/move-list.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/board/board.component.css","./src/app/board/board.component.ts","./src/app/move-list/move-list.component.css","./src/app/move-list/move-list.component.ts","./src/app/promotion.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"column1\\\">\\r\\n        <app-board></app-board>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"column3\\\">\\r\\n        <app-move-list></app-move-list>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<router-outlet></router-outlet>\"","export default \"<div id=\\\"board1\\\" style=\\\"width: 70%; float: right; padding-top: 10%;\\\"></div>\\r\\n\\r\\n<button (click)=\\\"serviceCheck()\\\">Add Move</button>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div title = \\\"Move List\\\" style=\\\"padding-top: 15%;\\\">\\r\\n    <nav>\\r\\n        <ul>\\r\\n            <li>Move List:</li>\\r\\n            <li *ngFor=\\\"let item of moveList\\\">\\r\\n                id: {{ item.id }}, Piece: {{ item.piece }}, From: {{ item.source }}, To: {{ item.target }}\\r\\n            </li>\\r\\n        </ul>\\r\\n    </nav>\\r\\n</div>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".row {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n  }\\r\\n\\r\\n  .column1 {\\r\\n    -webkit-box-flex: 60%;\\r\\n            flex: 60%\\r\\n  }\\r\\n\\r\\n  .column2 {\\r\\n    -webkit-box-flex: 10%;\\r\\n            flex: 10%;\\r\\n  }\\r\\n\\r\\n  .column3 {\\r\\n      -webkit-box-flex: 40%;\\r\\n              flex: 40%;\\r\\n      text-align: center;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7RUFDZjs7RUFFQTtJQUNFLHFCQUFRO1lBQVI7RUFDRjs7RUFFQTtJQUNFLHFCQUFTO1lBQVQsU0FBUztFQUNYOztFQUVBO01BQ0kscUJBQVM7Y0FBVCxTQUFTO01BQ1Qsa0JBQWtCO0VBQ3RCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG5cclxuICAuY29sdW1uMSB7XHJcbiAgICBmbGV4OiA2MCVcclxuICB9XHJcbiAgXHJcbiAgLmNvbHVtbjIge1xyXG4gICAgZmxleDogMTAlO1xyXG4gIH1cclxuXHJcbiAgLmNvbHVtbjMge1xyXG4gICAgICBmbGV4OiA0MCU7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9Il19 */\"","import {Component, NgModule, OnInit} from '@angular/core';\r\nimport { BoardComponent } from './board/board.component';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport { HttpClientModule} from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'PromoChessFrontend';\r\n\r\n\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BoardComponent } from './board/board.component';\r\nimport { MoveListComponent } from './move-list/move-list.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BoardComponent,\r\n    MoveListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PromotionService } from '../promotion.service';\r\n\r\ndeclare var ChessBoard: any;\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\n\r\nexport class BoardComponent implements OnInit {\r\n  title = 'PromoChessFrontend';\r\n\r\n  constructor(private promotionService: PromotionService){}\r\n\r\n  startBoard: any;\r\n  counter: number = 0;\r\n  difficultyDepth: number = 4;\r\n  changeBoard: Function = (boardObj) => {\r\n    this.startBoard.position(boardObj, true)\r\n};\r\n\r\n  public ngOnInit(): void{\r\n    this.startBoard = ChessBoard('board1', {\r\n      position: 'ppppkppp/pppppppp/8/8/8/8/PPPPPPPP/PPPPKPPP',\r\n      draggable: true,\r\n      onChange: onChange,\r\n      onDrop: onDrop,\r\n      onMoveEnd: onMoveEnd,\r\n      onMouseoverSquare: onMouseoverSquare,\r\n      onMouseoutSquare: onMouseoutSquare\r\n    });\r\n\r\n    let board = this.startBoard;\r\n    let numOfMoves = this.counter;\r\n    let service = this.promotionService;\r\n    let depth = this.difficultyDepth;\r\n\r\n\r\n    // Sends board changes to move-list component\r\n    function onChange (oldPos, newPos) {\r\n    }\r\n\r\n\r\n    // Returns an array of all valid position objects for the given piece BEFORE checking for \"Check\" status\r\n    // Return Type: ArrayList[]\r\n    function getPreLegalMoves(square, piece, boardPos, orientation) {\r\n      let pieceType : string;\r\n      let pieceColor : string;\r\n      // Represents indexes of allSquares array that corresponds with the given square\r\n      let row : number;\r\n      let col : number;\r\n      let moves : string[] = [];\r\n      let allSquares : Array<string[]>;\r\n\r\n      // 2D Array of all square combinations\r\n      allSquares = [[\"a8\", \"b8\", \"c8\", \"d8\", \"e8\", \"f8\", \"g8\", \"h8\"],\r\n      [\"a7\", \"b7\", \"c7\", \"d7\", \"e7\", \"f7\", \"g7\", \"h7\"],\r\n      [\"a6\", \"b6\", \"c6\", \"d6\", \"e6\", \"f6\", \"g6\", \"h6\"],\r\n      [\"a5\", \"b5\", \"c5\", \"d5\", \"e5\", \"f5\", \"g5\", \"h5\"],\r\n      [\"a4\", \"b4\", \"c4\", \"d4\", \"e4\", \"f4\", \"g4\", \"h4\"],\r\n      [\"a3\", \"b3\", \"c3\", \"d3\", \"e3\", \"f3\", \"g3\", \"h3\"],\r\n      [\"a2\", \"b2\", \"c2\", \"d2\", \"e2\", \"f2\", \"g2\", \"h2\"],\r\n      [\"a1\", \"b1\", \"c1\", \"d1\", \"e1\", \"f1\", \"g1\", \"h1\"]];\r\n\r\n      // Assign row and col values\r\n      for (let i: number = 0; i < allSquares.length; i++) {\r\n        if (allSquares[i].includes(square)) {\r\n          row = i;\r\n          col = allSquares[i].indexOf(square)\r\n        }\r\n      }\r\n\r\n      //pieceType will return uppercase symbol\r\n      pieceType = piece.toString()[1];\r\n      //pieceColor will return lowercase char ('w' or 'b')\r\n      pieceColor = piece.toString()[0];\r\n\r\n      // If piece is Pawn\r\n      // Can attack in any 1 distance range\r\n      // Can move freely sideways, forward, and forward-diagonal\r\n      if (pieceType == \"P\") {\r\n        let searchRowIndex : number = row;\r\n        let searchColIndex : number = col;\r\n        if (orientation == \"white\") {\r\n          if (pieceColor == \"w\") {\r\n            // Look forward\r\n            searchRowIndex = row - 1;\r\n            searchColIndex = col;\r\n\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              let searchSquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              if (searchSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare);\r\n                // If in home \"pawn launch row\"\r\n                if (allSquares[6].includes(square)) {\r\n                  searchRowIndex -= 1;\r\n                  if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n                    searchSquare = allSquares[searchRowIndex][searchColIndex];\r\n                    if (!(searchSquare in boardPos)) {\r\n                      moves.push(searchSquare);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            // Look Forward-Diagonal\r\n            searchRowIndex = row - 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              if (0 <= (searchColIndex - 1) && (searchColIndex - 1) <= 7) {\r\n                let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex - 1];\r\n                if (searchSquare1 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare1];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare1);\r\n                  }\r\n                }\r\n                else {\r\n                  moves.push(searchSquare1);\r\n                }\r\n              }\r\n              if (0 <= (searchColIndex + 1) && (searchColIndex + 1) <= 7) {\r\n                let searchSquare2 : string = allSquares[searchRowIndex][searchColIndex + 1];\r\n                if (searchSquare2 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare2];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare2);\r\n                  }\r\n                }\r\n                else {\r\n                  moves.push(searchSquare2);\r\n                }\r\n              }\r\n            }\r\n\r\n            // Look Sideways\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            if (0 <= (searchColIndex - 1) && (searchColIndex - 1) <= 7) {\r\n              let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex - 1];\r\n              if (searchSquare1 in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare1];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare1);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare1)\r\n              }\r\n            }\r\n            if (0 <= (searchColIndex + 1) && (searchColIndex + 1) <= 7) {\r\n              let searchSquare2 : string = allSquares[searchRowIndex][searchColIndex + 1];\r\n              if (searchSquare2 in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare2];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare2);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare2)\r\n              }\r\n            }\r\n\r\n            // Look backward\r\n            searchRowIndex = row + 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              let searchSquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              if (searchSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare);\r\n                }\r\n              }\r\n            }\r\n\r\n            // Look Backward-Diagonal\r\n            searchRowIndex = row + 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              if (0 <= (searchColIndex - 1) && (searchColIndex - 1) <= 7) {\r\n                let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex - 1];\r\n                if (searchSquare1 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare1];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare1);\r\n                  }\r\n                }\r\n              }\r\n              if (0 <= (searchColIndex + 1) && (searchColIndex + 1) <= 7) {\r\n                let searchSquare2 : string = allSquares[searchRowIndex][searchColIndex + 1];\r\n                if (searchSquare2 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare2];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare2);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          if (pieceColor == \"b\") {\r\n            // Look forward\r\n            searchRowIndex = row + 1;\r\n            searchColIndex = col;\r\n\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              let searchSquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              if (searchSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare);\r\n                // If in home \"pawn launch row\"\r\n                if (allSquares[1].includes(square)) {\r\n                  searchRowIndex += 1;\r\n                  if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n                    searchSquare = allSquares[searchRowIndex][searchColIndex];\r\n                    if (!(searchSquare in boardPos)) {\r\n                      moves.push(searchSquare);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            // Look Forward-Diagonal\r\n            searchRowIndex = row + 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              if (0 <= (searchColIndex - 1) && (searchColIndex - 1) <= 7) {\r\n                let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex - 1];\r\n                if (searchSquare1 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare1];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare1);\r\n                  }\r\n                }\r\n                else {\r\n                  moves.push(searchSquare1);\r\n                }\r\n              }\r\n              if (0 <= (searchColIndex + 1) && (searchColIndex + 1) <= 7) {\r\n                let searchSquare2 : string = allSquares[searchRowIndex][searchColIndex + 1];\r\n                if (searchSquare2 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare2];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare2);\r\n                  }\r\n                }\r\n                else {\r\n                  moves.push(searchSquare2);\r\n                }\r\n              }\r\n            }\r\n\r\n            // Look Sideways\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            if (0 <= (searchColIndex - 1) && (searchColIndex - 1) <= 7) {\r\n              let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex - 1];\r\n              if (searchSquare1 in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare1];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare1);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare1)\r\n              }\r\n            }\r\n            if (0 <= (searchColIndex + 1) && (searchColIndex + 1) <= 7) {\r\n              let searchSquare2 : string = allSquares[searchRowIndex][searchColIndex + 1];\r\n              if (searchSquare2 in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare2];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare2);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare2)\r\n              }\r\n            }\r\n\r\n            // Look backward\r\n            searchRowIndex = row - 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              let searchSquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              if (searchSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare);\r\n                }\r\n              }\r\n            }\r\n\r\n            // Look Backward-Diagonal\r\n            searchRowIndex = row - 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              if (0 <= (searchColIndex - 1) && (searchColIndex - 1) <= 7) {\r\n                let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex - 1];\r\n                if (searchSquare1 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare1];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare1);\r\n                  }\r\n                }\r\n              }\r\n              if (0 <= (searchColIndex + 1) && (searchColIndex + 1) <= 7) {\r\n                let searchSquare2 : string = allSquares[searchRowIndex][searchColIndex + 1];\r\n                if (searchSquare2 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare2];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare2);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        let searchRowIndex : number = row;\r\n        let searchColIndex : number = col;\r\n\r\n        switch(pieceType) {\r\n            // Rook\r\n          case \"R\":\r\n            // Look up\r\n            searchRowIndex = row;\r\n            while (searchRowIndex > 0) {\r\n              --searchRowIndex;\r\n              let upSquare : string = allSquares[searchRowIndex][col];\r\n              // If another piece exists in square\r\n              if (upSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[upSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(upSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(upSquare);\r\n              }\r\n            }\r\n\r\n            // Look down\r\n            searchRowIndex = row;\r\n            while (searchRowIndex < 7) {\r\n              ++searchRowIndex;\r\n              let downSquare : string = allSquares[searchRowIndex][col];\r\n              // If another piece exists in square\r\n              if (downSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[downSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(downSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(downSquare);\r\n              }\r\n            }\r\n\r\n            // Look left\r\n            searchColIndex = col;\r\n            while (searchColIndex > 0) {\r\n              --searchColIndex;\r\n              let leftSquare : string = allSquares[row][searchColIndex];\r\n              // If another piece exists in square\r\n              if (leftSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[leftSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(leftSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(leftSquare);\r\n              }\r\n            }\r\n\r\n            // Look right\r\n            searchColIndex = col;\r\n            while (searchColIndex < 7) {\r\n              ++searchColIndex;\r\n              let rightSquare : string = allSquares[row][searchColIndex];\r\n              // If another piece exists in square\r\n              if (rightSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[rightSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(rightSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(rightSquare);\r\n              }\r\n            }\r\n\r\n            break;\r\n\r\n            // Bishop\r\n          case \"B\":\r\n            // Look North East\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            while (searchRowIndex > 0 && searchColIndex < 7) {\r\n              --searchRowIndex;\r\n              ++searchColIndex;\r\n              let NESquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              // If another piece exists in square\r\n              if (NESquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[NESquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(NESquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(NESquare);\r\n              }\r\n            }\r\n\r\n            // Look South East\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            while (searchRowIndex < 7 && searchColIndex < 7) {\r\n              ++searchRowIndex;\r\n              ++searchColIndex;\r\n              let SESquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              // If another piece exists in square\r\n              if (SESquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[SESquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(SESquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(SESquare);\r\n              }\r\n            }\r\n\r\n            // Look South West\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            while (searchRowIndex < 7 && searchColIndex > 0) {\r\n              ++searchRowIndex;\r\n              --searchColIndex;\r\n              let SWSquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              // If another piece exists in square\r\n              if (SWSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[SWSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(SWSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(SWSquare);\r\n              }\r\n            }\r\n\r\n            // Look North West\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            while (searchRowIndex > 0 && searchColIndex > 0) {\r\n              --searchRowIndex;\r\n              --searchColIndex;\r\n              let NWSquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              // If another piece exists in square\r\n              if (NWSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[NWSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(NWSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(NWSquare);\r\n              }\r\n            }\r\n\r\n            break;\r\n\r\n            // Knight\r\n          case \"N\":\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n\r\n            // Look vertically left and right (Long up/down, Short left/right)\r\n            for (let i: number = 2; i >= -2; i -= 4) {\r\n              if (0 <= searchRowIndex + i && searchRowIndex + i <= 7) {\r\n                for (let j: number = 1; j >= -1; j -= 2) {\r\n                  if (0 <= searchColIndex + j && searchColIndex + j <= 7) {\r\n                    let searchSquare : string = allSquares[searchRowIndex + i][searchColIndex + j];\r\n                    // If another piece exists in square\r\n                    if (searchSquare in boardPos) {\r\n                      let bogeyPiece : string = boardPos[searchSquare];\r\n                      let bogeyColor : string = bogeyPiece[0];\r\n                      if (pieceColor != bogeyColor) {\r\n                        moves.push(searchSquare);\r\n                      }\r\n                    }\r\n                    // No piece detected, add square to list of legal moves\r\n                    else {\r\n                      moves.push(searchSquare);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            // Look horizontally up and down (Long left/right, Short up/down)\r\n            for (let i: number = 1; i >= -1; i -= 2) {\r\n              if (0 <= searchRowIndex + i && searchRowIndex + i <= 7) {\r\n                for (let j: number = 2; j >= -2; j -= 4) {\r\n                  if (0 <= searchColIndex + j && searchColIndex + j <= 7) {\r\n                    let searchSquare : string = allSquares[searchRowIndex + i][searchColIndex + j];\r\n                    if (searchSquare in boardPos) {\r\n                      let bogeyPiece : string = boardPos[searchSquare];\r\n                      let bogeyColor : string = bogeyPiece[0];\r\n                      if (pieceColor != bogeyColor) {\r\n                        moves.push(searchSquare);\r\n                      }\r\n                    }\r\n                    else {\r\n                      moves.push(searchSquare);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            break;\r\n\r\n            // Queen\r\n          case \"Q\":\r\n            // Look up\r\n            searchRowIndex = row;\r\n            while (searchRowIndex > 0) {\r\n              --searchRowIndex;\r\n              let upSquare : string = allSquares[searchRowIndex][col];\r\n              // If another piece exists in square\r\n              if (upSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[upSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(upSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(upSquare);\r\n              }\r\n            }\r\n\r\n            // Look down\r\n            searchRowIndex = row;\r\n            while (searchRowIndex < 7) {\r\n              ++searchRowIndex;\r\n              let downSquare : string = allSquares[searchRowIndex][col];\r\n              // If another piece exists in square\r\n              if (downSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[downSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(downSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(downSquare);\r\n              }\r\n            }\r\n\r\n            // Look left\r\n            searchColIndex = col;\r\n            while (searchColIndex > 0) {\r\n              --searchColIndex;\r\n              let leftSquare : string = allSquares[row][searchColIndex];\r\n              // If another piece exists in square\r\n              if (leftSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[leftSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(leftSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(leftSquare);\r\n              }\r\n            }\r\n\r\n            // Look right\r\n            searchColIndex = col;\r\n            while (searchColIndex < 7) {\r\n              ++searchColIndex;\r\n              let rightSquare : string = allSquares[row][searchColIndex];\r\n              // If another piece exists in square\r\n              if (rightSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[rightSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(rightSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(rightSquare);\r\n              }\r\n            }\r\n\r\n            // Look North East\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            while (searchRowIndex > 0 && searchColIndex < 7) {\r\n              --searchRowIndex;\r\n              ++searchColIndex;\r\n              let NESquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              // If another piece exists in square\r\n              if (NESquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[NESquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(NESquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(NESquare);\r\n              }\r\n            }\r\n\r\n            // Look South East\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            while (searchRowIndex < 7 && searchColIndex < 7) {\r\n              ++searchRowIndex;\r\n              ++searchColIndex;\r\n              let SESquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              // If another piece exists in square\r\n              if (SESquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[SESquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(SESquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(SESquare);\r\n              }\r\n            }\r\n\r\n            // Look South West\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            while (searchRowIndex < 7 && searchColIndex > 0) {\r\n              ++searchRowIndex;\r\n              --searchColIndex;\r\n              let SWSquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              // If another piece exists in square\r\n              if (SWSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[SWSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(SWSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(SWSquare);\r\n              }\r\n            }\r\n\r\n            // Look North West\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            while (searchRowIndex > 0 && searchColIndex > 0) {\r\n              --searchRowIndex;\r\n              --searchColIndex;\r\n              let NWSquare : string = allSquares[searchRowIndex][searchColIndex];\r\n              // If another piece exists in square\r\n              if (NWSquare in boardPos) {\r\n                let bogeyPiece : string = boardPos[NWSquare];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                // Taking your own piece is not legal\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(NWSquare);\r\n                }\r\n                // Another piece has been reached, cannot proceed any further\r\n                break;\r\n              }\r\n              // No piece detected, add square to list of legal moves\r\n              else {\r\n                moves.push(NWSquare);\r\n              }\r\n            }\r\n\r\n            break;\r\n\r\n            // King\r\n          case \"K\":\r\n            // Look Up\r\n            searchRowIndex = row - 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex];\r\n              if (searchSquare1 in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare1];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare1);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare1);\r\n              }\r\n            }\r\n\r\n            // Look Down\r\n            searchRowIndex = row + 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex];\r\n              if (searchSquare1 in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare1];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare1);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare1);\r\n              }\r\n            }\r\n\r\n            // Look Sideways\r\n            searchRowIndex = row;\r\n            searchColIndex = col;\r\n            if (0 <= (searchColIndex - 1) && (searchColIndex - 1) <= 7) {\r\n              let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex - 1];\r\n              if (searchSquare1 in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare1];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare1);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare1)\r\n              }\r\n            }\r\n            if (0 <= (searchColIndex + 1) && (searchColIndex + 1) <= 7) {\r\n              let searchSquare2 : string = allSquares[searchRowIndex][searchColIndex + 1];\r\n              if (searchSquare2 in boardPos) {\r\n                let bogeyPiece : string = boardPos[searchSquare2];\r\n                let bogeyColor : string = bogeyPiece[0];\r\n                if (pieceColor != bogeyColor) {\r\n                  moves.push(searchSquare2);\r\n                }\r\n              }\r\n              else {\r\n                moves.push(searchSquare2)\r\n              }\r\n            }\r\n\r\n            // Look Up-Diagonal\r\n            searchRowIndex = row - 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              if (0 <= (searchColIndex - 1) && (searchColIndex - 1) <= 7) {\r\n                let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex - 1];\r\n                if (searchSquare1 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare1];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare1);\r\n                  }\r\n                }\r\n                else {\r\n                  moves.push(searchSquare1);\r\n                }\r\n              }\r\n              if (0 <= (searchColIndex + 1) && (searchColIndex + 1) <= 7) {\r\n                let searchSquare2 : string = allSquares[searchRowIndex][searchColIndex + 1];\r\n                if (searchSquare2 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare2];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare2);\r\n                  }\r\n                }\r\n                else {\r\n                  moves.push(searchSquare2);\r\n                }\r\n              }\r\n            }\r\n\r\n            // Look Down-Diagonal\r\n            searchRowIndex = row + 1;\r\n            searchColIndex = col;\r\n            if (0 <= searchRowIndex && searchRowIndex <= 7) {\r\n              if (0 <= (searchColIndex - 1) && (searchColIndex - 1) <= 7) {\r\n                let searchSquare1 : string = allSquares[searchRowIndex][searchColIndex - 1];\r\n                if (searchSquare1 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare1];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare1);\r\n                  }\r\n                }\r\n                else {\r\n                  moves.push(searchSquare1);\r\n                }\r\n              }\r\n              if (0 <= (searchColIndex + 1) && (searchColIndex + 1) <= 7) {\r\n                let searchSquare2 : string = allSquares[searchRowIndex][searchColIndex + 1];\r\n                if (searchSquare2 in boardPos) {\r\n                  let bogeyPiece : string = boardPos[searchSquare2];\r\n                  let bogeyColor : string = bogeyPiece[0];\r\n                  if (pieceColor != bogeyColor) {\r\n                    moves.push(searchSquare2);\r\n                  }\r\n                }\r\n                else {\r\n                  moves.push(searchSquare2);\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            console.log(\"Error in getPreLegalMoves()! Piece type invalid!\");\r\n            break;\r\n        }\r\n      }\r\n\r\n      return moves;\r\n    }\r\n\r\n\r\n    // Returns an array of all valid position objects for the given piece AFTER checking for \"Check\" status\r\n    // Return Type: ArrayList[]\r\n    function getLegalMoves(square, piece, boardPos, orientation) {\r\n      let moves : string[] = getPreLegalMoves(square, piece, boardPos, orientation);\r\n      let pieceType : string;\r\n      let pieceColor : string;\r\n      // Represents indexes of allSquares array that corresponds with the given square\r\n      let row : number;\r\n      let col : number;\r\n      let allSquares : Array<string[]>;\r\n\r\n      // 2D Array of all square combinations\r\n      allSquares = [[\"a8\", \"b8\", \"c8\", \"d8\", \"e8\", \"f8\", \"g8\", \"h8\"],\r\n        [\"a7\", \"b7\", \"c7\", \"d7\", \"e7\", \"f7\", \"g7\", \"h7\"],\r\n        [\"a6\", \"b6\", \"c6\", \"d6\", \"e6\", \"f6\", \"g6\", \"h6\"],\r\n        [\"a5\", \"b5\", \"c5\", \"d5\", \"e5\", \"f5\", \"g5\", \"h5\"],\r\n        [\"a4\", \"b4\", \"c4\", \"d4\", \"e4\", \"f4\", \"g4\", \"h4\"],\r\n        [\"a3\", \"b3\", \"c3\", \"d3\", \"e3\", \"f3\", \"g3\", \"h3\"],\r\n        [\"a2\", \"b2\", \"c2\", \"d2\", \"e2\", \"f2\", \"g2\", \"h2\"],\r\n        [\"a1\", \"b1\", \"c1\", \"d1\", \"e1\", \"f1\", \"g1\", \"h1\"]];\r\n\r\n      // Assign row and col values\r\n      for (let i: number = 0; i < allSquares.length; i++) {\r\n        if (allSquares[i].includes(square)) {\r\n          row = i;\r\n          col = allSquares[i].indexOf(square)\r\n        }\r\n      }\r\n\r\n      //pieceType will return uppercase symbol\r\n      pieceType = piece.toString()[1];\r\n      //pieceColor will return lowercase char ('w' or 'b')\r\n      pieceColor = piece.toString()[0];\r\n\r\n      if (isCheck(pieceColor, boardPos, orientation)) {\r\n        let newMoves : string[] = moves.slice();\r\n        for (let i : number = 0; i < moves.length; i++) {\r\n          let testBoardPos : object = {};\r\n          testBoardPos = Object.assign(testBoardPos, boardPos);\r\n          let currentMove : string = moves[i];\r\n\r\n          // Simulate the move on the testBoardPos Object\r\n          // Piece leaves its origin\r\n          delete testBoardPos[square];\r\n          // If piece is attacking, move and promote\r\n          if (Object.keys(testBoardPos).includes(currentMove)) {\r\n            testBoardPos[currentMove] = piece;\r\n            testBoardPos = promote(boardPos, testBoardPos, currentMove, piece, orientation);\r\n          }\r\n          else {\r\n            testBoardPos[currentMove] = piece;\r\n          }\r\n          // Determine if simulated move is still in check or not\r\n          if (isCheck(pieceColor, testBoardPos, orientation)) {\r\n            // Move is in check and therefore illegal\r\n            delete newMoves[i];\r\n          }\r\n        }\r\n        // Remove empty elements, caused by deletion\r\n        newMoves = newMoves.filter(el => el != null);\r\n        // Set moves to newMoves\r\n        moves = newMoves;\r\n      }\r\n      return moves;\r\n    }\r\n\r\n\r\n    // Returns whether or not piece at specified square can attack opposing king\r\n    // Return Type: boolean\r\n    function canPieceTakeKing(square, boardObj, orientation) {\r\n      let piece : string = boardObj[square];\r\n      let pieceColor : string = piece[0].toString();\r\n\r\n      // Assigns square position of enemy king\r\n      let enemyKingSquare : string;\r\n      if (pieceColor === \"w\") {\r\n        enemyKingSquare = Object.keys(boardObj).find(key => boardObj[key] === \"bK\");\r\n      }\r\n      if (pieceColor === \"b\") {\r\n        enemyKingSquare = Object.keys(boardObj).find(key => boardObj[key] === \"wK\");\r\n      }\r\n\r\n      let moves : string[] = getPreLegalMoves(square, piece, boardObj, orientation);\r\n      return moves.includes(enemyKingSquare);\r\n    }\r\n\r\n\r\n    // Returns whether or not specified color team is in check or not\r\n    // Return Type: boolean\r\n    function isCheck(colorChar, boardObj, orientation) {\r\n      for (let i : number = 0; i < Object.keys(boardObj).length; i++) {\r\n        let gridKey : string = Object.keys(boardObj)[i]; // Square Position\r\n        let piece : string = boardObj[gridKey];\r\n        let pieceColor : string = piece[0];\r\n\r\n        if (pieceColor != colorChar) {\r\n          if (canPieceTakeKing(gridKey, boardObj, orientation)) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n\r\n    // Returns whether or not specified color team is in checkmate or not\r\n    // Return Type: boolean\r\n    function isCheckmate(colorChar, boardObj, orientation) {\r\n      for (let i : number = 0; i < Object.keys(boardObj).length; i++) {\r\n        let gridKey : string = Object.keys(boardObj)[i]; // Square Position\r\n        let piece : string = boardObj[gridKey];\r\n        let pieceColor : string = piece[0];\r\n\r\n        if (pieceColor === colorChar) {\r\n          let moveCount : number = getLegalMoves(gridKey, piece, boardObj, orientation).length;\r\n          if (moveCount > 0) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n\r\n    // Returns board with promoted chess piece\r\n    // Return Type: Fen String\r\n    function promote(oldBoardObj, newBoardObj, newPos, piece, orientation) {\r\n      let enemyPiece: any;\r\n      let promotingPiece = piece;\r\n\r\n      // If piece was not taken and piece is a pawn that has reach enemy row, promote to queen\r\n      if (!(wasPieceTaken(oldBoardObj, newBoardObj))) {\r\n        if (orientation == \"white\") {\r\n          if (promotingPiece == \"wP\") {\r\n            // If white pawn has reach enemy row\r\n            if (newPos[1] == \"8\") {\r\n              // Promotes pawn to queen and returns fen string\r\n              newBoardObj[newPos] = \"wQ\";\r\n              return newBoardObj;\r\n            }\r\n            else {\r\n              return newBoardObj;\r\n            }\r\n          }\r\n          else if (promotingPiece == \"bP\") {\r\n            // If black pawn has reach enemy row\r\n            if (newPos[1] == \"1\") {\r\n              // Promotes pawn to queen and returns fen string\r\n              newBoardObj[newPos] = \"bQ\";\r\n              return newBoardObj;\r\n            }\r\n            else {\r\n              return newBoardObj;\r\n            }\r\n          }\r\n          else {\r\n            return newBoardObj;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        //Finds and stores enemy piece type\r\n        for(let key in oldBoardObj){\r\n          if(key === newPos){\r\n            enemyPiece = oldBoardObj[key]\r\n          }\r\n          //Finds and stores current player piece type\r\n\r\n        }\r\n\r\n        //Still need to compare attacking and taken pieces in order to determine what rank to promote to\r\n        if(promotingPiece == \"wP\" || promotingPiece == \"bP\"){\r\n          if(enemyPiece == \"wN\" || enemyPiece == \"bN\"){\r\n            for(let key in newBoardObj){\r\n              if(key === newPos){\r\n                if(promotingPiece == \"wP\"){\r\n                  newBoardObj[key] = \"wB\";\r\n                }else {\r\n                  newBoardObj[key] = \"bB\";\r\n                }\r\n              }\r\n            }\r\n          }else if(enemyPiece == \"wQ\" || enemyPiece == \"bQ\"){\r\n            for(let key in newBoardObj){\r\n              if(key === newPos){\r\n                if(promotingPiece == \"wP\"){\r\n                  newBoardObj[key] = \"wN\";\r\n                }else {\r\n                  newBoardObj[key] = \"bN\";\r\n                }\r\n              }\r\n            }\r\n          }else {\r\n            for(let key in newBoardObj){\r\n              if(key === newPos){\r\n                if(promotingPiece == \"wP\"){\r\n                  newBoardObj[key] = \"wR\";\r\n                }else {\r\n                  newBoardObj[key] = \"bR\";\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }else if(promotingPiece == \"wR\" || promotingPiece == \"bR\"){\r\n          if(enemyPiece == \"wQ\" || enemyPiece == \"bQ\"){\r\n            for(let key in newBoardObj){\r\n              if(key === newPos){\r\n                if(promotingPiece == \"wR\"){\r\n                  newBoardObj[key] = \"wN\";\r\n                }else {\r\n                  newBoardObj[key] = \"bN\";\r\n                }\r\n              }\r\n            }\r\n          }else {\r\n            for(let key in newBoardObj){\r\n              if(key === newPos){\r\n                if(promotingPiece == \"wR\"){\r\n                  newBoardObj[key] = \"wB\";\r\n                }else {\r\n                  newBoardObj[key] = \"bB\";\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }else if(promotingPiece == \"wB\" || promotingPiece == \"bB\"){\r\n          for(let key in newBoardObj){\r\n            if(key === newPos){\r\n              if(promotingPiece == \"wB\"){\r\n                newBoardObj[key] = \"wN\";\r\n              }else {\r\n                newBoardObj[key] = \"bN\";\r\n              }\r\n            }\r\n          }\r\n        }else{\r\n          for(let key in newBoardObj){\r\n            if(key == newPos){\r\n              if(promotingPiece == \"wN\"){\r\n                newBoardObj[key] = \"wQ\"\r\n              }else if(promotingPiece == \"bN\"){\r\n                newBoardObj[key] = \"bQ\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        //returns the newly changed Board Object as a FEN String,\r\n        //if No change was made then FEN will be returned unchanged\r\n        return newBoardObj\r\n      }\r\n    }\r\n\r\n    // Returns true if a piece was taken between 2 board states\r\n    // Return Type: boolean\r\n    function wasPieceTaken(oldBoardObj, newBoardObj) {\r\n        if(Object.entries(oldBoardObj).length > Object.entries(newBoardObj).length){\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n    }\r\n\r\n    // Outlines all legal moves for given pos\r\n    // Return Type: void\r\n    function showLegalMoves(square, piece, boardPos, orientation) {\r\n      let legalMoves : string[] = getLegalMoves(square, piece, boardPos, orientation);\r\n      for (let i : number = 0; i < legalMoves.length; i++) {\r\n        let tempSqName : string = legalMoves[i];\r\n        let squareElement : Element = document.getElementsByClassName(\"square-\" + tempSqName)[0];\r\n\r\n        // Create Overlay Div\r\n        let newElement : Element = document.createElement('div');\r\n        newElement.className = \"legal-overlay\";\r\n        newElement.id = `${tempSqName}-overlay`;\r\n        newElement.setAttribute(\"style\", \"background-color: springgreen; opacity: 0.4; width: 100%; height: 100%; position: relative; z-index: 0; float: right\");\r\n        squareElement.insertAdjacentElement('afterbegin', newElement);\r\n\r\n        // Make sure each time to make all chess-piece images float above\r\n        // TODO: See if this style attribute can be applied fewer times, rather than every method call\r\n        let imgElements : HTMLCollection = document.getElementsByClassName('piece-417db');\r\n        for (let i : number = 0; i < imgElements.length; i++) {\r\n          let tempElement : Element = imgElements[i];\r\n          let tempAttr : string = tempElement.getAttribute(\"style\");\r\n          tempAttr += \"; z-index: 0; position: absolute;\";\r\n          tempElement.setAttribute(\"style\", tempAttr);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Removes outlines of all legal moves for given pos\r\n    // Return Type: void\r\n    function hideLegalMoves(square, piece, boardPos, orientation) {\r\n      let overlayElements : HTMLCollection = document.getElementsByClassName(\"legal-overlay\");\r\n      // While there is a first element in overlayElements\r\n      while (overlayElements[0]) {\r\n        let overlaySq : Element = overlayElements[0];\r\n        overlaySq.parentNode.removeChild(overlaySq);\r\n      }\r\n    }\r\n\r\n    // Activates whenever player-drag move has been made\r\n    function onDrop(source, target, piece, newPos, oldPos, orientation) {\r\n      hideLegalMoves(source, piece, oldPos, orientation);\r\n\r\n      let legalSpaces = getLegalMoves(source, piece, oldPos, orientation);\r\n      let wasLegal: boolean;\r\n      wasLegal = false;\r\n\r\n      for(let key in legalSpaces){\r\n        if(target === legalSpaces[key]){\r\n          wasLegal = true;\r\n        }\r\n      }\r\n\r\n      if(!wasLegal){\r\n        return 'snapback';\r\n      }else{\r\n        numOfMoves += 1;\r\n        service.addMoveToList(numOfMoves, piece, source, target, newPos);\r\n        if(wasPieceTaken(oldPos, newPos)){\r\n          board.position(promote(oldPos, newPos, target, piece, orientation), false);\r\n        }\r\n        else {\r\n          if (piece == \"wP\" || piece == \"bP\") {\r\n            board.position(promote(oldPos, newPos, target, piece, orientation), false);\r\n          }\r\n        }\r\n        setTimeout(function () {\r\n          let restPackage : object = {\r\n            \"fenString\": board.fen(),\r\n            \"aiColor\": piece[0],\r\n            \"depth\": depth,\r\n            \"orientation\": orientation\r\n          };\r\n\r\n          let aiBoardFen : any;\r\n          service.getAIMove(restPackage).subscribe(data => {});\r\n          console.log(aiBoardFen);\r\n          board.position(ChessBoard.fenToObj(aiBoardFen), true);\r\n        }, 5000);\r\n        return 'trash';\r\n      }\r\n    }\r\n\r\n    // Activates whenever animation has occurred (AI has made move)\r\n    function onMoveEnd(oldPos, newPos) {\r\n\r\n    }\r\n\r\n    //Activates whenever mouse enters square\r\n    function onMouseoverSquare(square, piece, boardPos, orientation){\r\n      if (piece) {\r\n        showLegalMoves(square, piece, boardPos, orientation);\r\n        // console.log(isCheckmate(piece[0], boardPos, orientation));\r\n      }\r\n    }\r\n\r\n    //Activates whenever mouse leaves square\r\n    function onMouseoutSquare(square, piece, boardPos, orientation){\r\n      if (piece) {\r\n        hideLegalMoves(square, piece, boardPos, orientation);\r\n      }\r\n    }\r\n  }\r\n\r\n  serviceCheck() {\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmUtbGlzdC9tb3ZlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PromotionService } from '../promotion.service';\r\n\r\n@Component({\r\n  selector: 'app-move-list',\r\n  templateUrl: './move-list.component.html',\r\n  styleUrls: ['./move-list.component.css']\r\n})\r\nexport class MoveListComponent implements OnInit {\r\n\r\n  constructor(private promotionService: PromotionService) { }\r\n\r\n  moveList;\r\n  ngOnInit() {\r\n\r\n    this.moveList = this.promotionService.getMoveList().reverse();\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PromotionService {\r\n\r\n  private moves: Array<{ id: number, piece: String, source: String, target: String, fen: String}> = [];\r\n  private urlREST : string = \"http://localhost:8080/PromotionChessAPI/api/chess\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addMoveToList(index, chosenPiece, src, tar, newFen) {\r\n    this.moves.push({id: index, piece: chosenPiece, source: src, target: tar, fen: newFen});\r\n\r\n    // console.log('addMoveToList was called!');\r\n    // console.log(this.moves)\r\n  }\r\n\r\n  getMoveList() {\r\n    return this.moves;\r\n  }\r\n\r\n  getAIMove(boardPackage: object): Observable<string> {\r\n    return this.http.post<any>(this.urlREST, boardPackage);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}